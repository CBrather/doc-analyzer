# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

variables:
  - name: GOBIN
    value: not-set
  - name: ImageTag
    value: '0.1.0-$(Build.BuildId)'

pool:
  vmImage: "ubuntu-latest"

steps:
  - checkout: self
    submodules: false
    persistCredentials: true
    displayName: checkout project

  - task: GoTool@0
    inputs:
      version: "1.18"
    displayName: install go

  - script: |
      set -a
      GOPATH=$HOME/.go
      GOBIN=$GOPATH/bin
      echo "##vso[task.setvariable variable=GOBIN]$GOBIN"
      echo "##vso[task.prependpath]$GOBIN"
    displayName: set go env vars

  - script: |
      make test-coverage
    displayName: "run tests"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: $(System.DefaultWorkingDirectory)/test/tests.xml
    displayName: "publish test results"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/test/coverage*/coverage.xml
    displayName: "publish code coverage report"

  - task: SnykSecurityScan@1
    inputs:
      serviceConnectionEndpoint: 'Snyk'
      testType: 'app'
      severityThreshold: 'high'
      monitorWhen: 'never'
      failOnIssues: true
      projectName: 'go-auth'
      organization: 'cbrather'

  - script: |
      make release
    displayName: "compile release binaries"
  
  - task: Docker@2
    inputs:
      containerRegistry: 'ACR Dev'
      repository: 'go-auth'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: $(ImageTag)

  - script: |
      sed -i 's/"\[\[IMAGE_TAG\]\]"/$(ImageTag)/' $(System.DefaultWorkingDirectory)/deployment/helm/values.yaml

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/deployment/helm'
      artifact: 'helm-chart'
      publishLocation: 'pipeline'