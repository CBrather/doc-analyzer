name: Build Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GOPATH: ${{ github.workspace }}/../go

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go Environment
        uses: actions/setup-go@v4.1.0
        with:
          go-version: "1.21"

      - name: Download Dependencies
        run: go mod tidy

      - name: Lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: v1.54.2

      - name: Test
        run: make test-coverage

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.9.0
        with:
          files: "test/tests.xml"
          comment_mode: off

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: "test/coverage/coverage.xml"

      - name: Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4.3.0
        with:
          project-token: ${{ secrets.CODACY_API_TOKEN }}
          run-docker-tools: false
          run-gosec: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.0.2
        with:
          args: >
            -Dsonar.organization=cbrather
            -Dsonar.projectKey=CBrather_doc-analyzer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2023.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
      
      - name: Build
        run: make release
